{"version":3,"file":"angular-google-tag-manager.js","sources":["../../../projects/angular-google-tag-manager/src/lib/angular-google-tag-manager.service.ts","../../../projects/angular-google-tag-manager/src/lib/angular-google-tag-manager.module.ts","../../../projects/angular-google-tag-manager/src/lib/google-tag-manager-config.ts"],"sourcesContent":["import { Inject, Injectable, Optional } from '@angular/core';\nimport { GoogleTagManagerConfig } from './google-tag-manager-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GoogleTagManagerService {\n  private isLoaded = false;\n\n  private browserGlobals = {\n    windowRef(): any {\n      return window;\n    },\n    documentRef(): any {\n      return document;\n    },\n  };\n\n  constructor(\n    @Optional()\n    @Inject('googleTagManagerConfig')\n    public config: GoogleTagManagerConfig = { id: null },\n    @Optional() @Inject('googleTagManagerId') public googleTagManagerId: string,\n    @Optional()\n    @Inject('googleTagManagerAuth')\n    public googleTagManagerAuth: string,\n    @Optional()\n    @Inject('googleTagManagerPreview')\n    public googleTagManagerPreview: string\n  ) {\n    if (this.config == null) {\n      this.config = { id: null };\n    }\n\n    this.config = {\n      ...this.config,\n      id: googleTagManagerId || this.config.id,\n      gtm_auth: googleTagManagerAuth || this.config['gtm_auth'],\n      gtm_preview: googleTagManagerPreview || this.config['gtm_preview'],\n    };\n    if (this.config.id == null) {\n      throw new Error('Google tag manager ID not provided.');\n    }\n  }\n\n  public getDataLayer() {\n    const window = this.browserGlobals.windowRef();\n    window['dataLayer'] = window['dataLayer'] || [];\n    return window['dataLayer'];\n  }\n\n  private pushOnDataLayer(obj: object) {\n    const dataLayer = this.getDataLayer();\n    dataLayer.push(obj);\n  }\n\n  public addGtmToDom() {\n    if (this.isLoaded) {\n      return;\n    }\n    const doc = this.browserGlobals.documentRef();\n    this.pushOnDataLayer({\n      'gtm.start': new Date().getTime(),\n      event: 'gtm.js',\n    });\n\n    const gtmScript = doc.createElement('script');\n    gtmScript.id = 'GTMscript';\n    gtmScript.async = true;\n    gtmScript.src = this.applyGtmQueryParams(\n      'https://www.googletagmanager.com/gtm.js'\n    );\n    doc.head.insertBefore(gtmScript, doc.head.firstChild);\n\n    this.isLoaded = true;\n  }\n\n  public pushTag(item: object) {\n    if (!this.isLoaded) {\n      this.addGtmToDom();\n    }\n    this.pushOnDataLayer(item);\n  }\n\n  private applyGtmQueryParams(url: string) {\n    if (url.indexOf('?') === -1) {\n      url += '?';\n    }\n\n    return (\n      url +\n      Object.keys(this.config)\n        .filter((k) => this.config[k])\n        .map((k) => `${k}=${this.config[k]}`)\n        .join('&')\n    );\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { GoogleTagManagerConfig } from './google-tag-manager-config';\n\n@NgModule()\nexport class GoogleTagManagerModule {\n  public static forRoot(\n    config: GoogleTagManagerConfig\n  ): ModuleWithProviders<GoogleTagManagerModule> {\n    return {\n      ngModule: GoogleTagManagerModule,\n      providers: [{ provide: 'googleTagManagerConfig', useValue: config }],\n    };\n  }\n}\n","export interface GoogleTagManagerConfig {\n  id: string | null;\n  gtm_auth?: string;\n  gtm_preview?: string;\n  [key: string]: string | null | undefined;\n}\n"],"names":[],"mappings":"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"}